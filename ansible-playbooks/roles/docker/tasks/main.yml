---
# roles/docker/tasks/main.yml

- name: Gather facts
  ansible.builtin.setup:

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

#
# Install packages by Distro type
- name: Install Docker  packages (Debian/Ubuntu)
  import_tasks: ubuntu.yml
  when: "ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'"

- name: Install Docker packages (Rocky)
  import_tasks: redhat.yml
  when: ansible_os_family == 'RedHat'


- name: Add Ansible user to Docker group
  user: 
    name: ansible
    groups: docker
    append: yes

- name: Initialize Docker Swarm
  community.docker.docker_swarm:
    state: present
    advertise_addr: "{{ ansible_default_ipv4.address }}"
    listen_addr: "0.0.0.0"
  register: manager_output
  when: inventory_hostname in groups['docker_managers'][0]

- name: Join Docker Swarm
  community.docker.docker_swarm:
    state: join
    join_token: "{{ hostvars[groups['docker_managers'][0]].manager_output.swarm_facts.JoinTokens.Worker }}"
    advertise_addr: "{{ ansible_default_ipv4.address }}"
    remote_addrs: "{{ hostvars[groups['docker_managers'][0]].inventory_hostname }}"
  when: inventory_hostname in groups['docker_workers']

- name: create traefik network
  docker_network:
    name: traefik-public
    driver: overlay
  when: inventory_hostname in groups['docker_managers']

- name: Create Cloudflare email secret for swarm/letsencrypt
  community.docker.docker_secret:
    name: cloudflare_email
    data: "{{ lookup('env', 'CLOUDFLARE_EMAIL') }}"
    state: present
  when: inventory_hostname in groups['docker_managers'][0]

- name: Create Cloudflare API Token secret for swarm/letsencrypt
  community.docker.docker_secret:
    name: cloudflare_api_token
    data: "{{ lookup('env', 'CLOUDFLARE_API_TOKEN') }}"
    state: present
  when: inventory_hostname in groups['docker_managers'][0]

- name: Create a secure temporary directory
  ansible.builtin.file:
    path: "/var/tmp/{{ ansible_user_id }}_temp"
    state: directory
    mode: 0700
  when: inventory_hostname in groups['docker_managers'][0]

- name: Ensure the traefik-htpasswd file is present on the Docker host
  ansible.builtin.copy:
    src: "{{ role_path }}/files/traefik-htpasswd"
    dest: "/var/tmp/{{ ansible_user_id }}_temp/traefik-htpasswd"
  when: inventory_hostname in groups['docker_managers'][0]

- name: Create User Basic Auth secret in Docker Swarm
  community.docker.docker_secret:
    name: basic_auth_usersfile
    data_src: "/var/tmp/{{ ansible_user_id }}_temp/traefik-htpasswd"
  when: inventory_hostname in groups['docker_managers'][0]

- name: Remove the temporary directory
  ansible.builtin.file:
    path: "/var/tmp/{{ ansible_user_id }}_temp"
    state: absent
  when: inventory_hostname in groups['docker_managers'][0]

- name: Generate Traefik docker-compose configuration
  ansible.builtin.template:
    src: docker-swarm_traefik.j2
    dest: /tmp/docker-swarm_traefik.yml
  when: inventory_hostname in groups['docker_managers']
  vars:
    traefik_version: "v3.0"
    domain: "303bpr.org"
    email: "hhoffman@ip-solutions.net"

- name: Deploy Traefik stack to Docker Swarm
  community.docker.docker_stack:
    state: present
    name: traefik
    compose:
      - /tmp/docker-swarm_traefik.yml
  when: inventory_hostname in groups['docker_managers']

