version: '3.7'

services:

  traefik:
    # Use the specified Traefik image
    image: traefik:{{ traefik_version | default('v3.0') }}
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - "80:80"
      # Listen on port 443, default for HTTPS
      - "443:443"
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the manager node
          - "node.role == manager"
      labels:
        # Enable Traefik for this service, to make it available in the public network
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.middlewares.admin-auth.basicauth.usersfile=/run/secrets/basic_auth_usersfile"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        - "traefik.http.routers.traefik-public-http.rule=Host(`{{ domain | default('example.com') }}`)"
        - "traefik.http.routers.traefik-public-http.entrypoints=http"
        - "traefik.http.routers.traefik-public-http.middlewares=https-redirect"
        - "traefik.http.routers.traefik-public-https.rule=Host(`{{ domain | default('example.com') }}`)"
        - "traefik.http.routers.traefik-public-https.entrypoints=https"
        - "traefik.http.routers.traefik-public-https.tls=true"
        - "traefik.http.routers.traefik-public-https.service=api@internal"
        - "traefik.http.routers.traefik-public-https.tls.certresolver=le"
        - "traefik.http.routers.traefik-public-https.middlewares=admin-auth"
        - "traefik.http.services.traefik-public.loadbalancer.server.port=8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-public-certificates:/certificates"
    command:
      - "--providers.docker"
      - "--providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.le.acme.email={{ email | default('email@example.com') }}"
      - "--certificatesresolvers.le.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.le.acme.dnschallenge=true"
      - "--certificatesresolvers.le.acme.dnschallenge.provider=cloudflare"
      - "--accesslog"
      - "--log"
      - "--api"
    secrets:
      - source: cloudflare_email
        target: cloudflare_email
      - source: cloudflare_api_token
        target: cloudflare_api_token
      - source: basic_auth_usersfile
        target: basic_auth_usersfile
    environment:
      CLOUDFLARE_EMAIL_FILE: "/run/secrets/cloudflare_email"
      CLOUDFLARE_API_TOKEN_FILE: "/run/secrets/cloudflare_api_token"
      BASIC_AUTH_USERFILE: "/run/secrets/basic_auth_usersfile"
    networks:
      - traefik-public

secrets:
  cloudflare_email:
    external: true
  cloudflare_api_token:
    external: true
  basic_auth_usersfile:
    external: true

volumes:
  traefik-public-certificates:

networks:
  traefik-public:
    external: true

